<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Milvasoft.SampleAPI</name>
    </assembly>
    <members>
        <member name="M:Milvasoft.SampleAPI.AppStartup.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Configures web api configurations.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Milvasoft.SampleAPI.AppStartup.Startup">
            <summary>
            Configuration class of project.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.AppStartup.Startup.Configuration">
            <summary>
            Gets or sets configuration object.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Creates a new <see cref="T:Milvasoft.SampleAPI.AppStartup.Startup"/> instances.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupConfiguration.EncryptFile(Milvasoft.Helpers.FileOperations.Abstract.IJsonOperations)">
            <summary>
            For development.
            </summary>
            <param name="jsonOperations"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupConfiguration.DecryptFile(Milvasoft.Helpers.FileOperations.Abstract.IJsonOperations)">
            <summary>
            For development.
            </summary>
            <param name="jsonOperations"></param>
            <returns></returns>
        </member>
        <member name="T:Milvasoft.SampleAPI.AppStartup.StartupHelpers">
            <summary>
            Helpers for service collection.
            </summary>
            <summary>
            Helpers for application builder.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupHelpers.ConfigureMVC(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            <para><b>EN: </b>Adds MVC services to the specified Microsoft.Extensions.DependencyInjection.IServiceCollection.</para>
            <para><b>TR: </b>Belirtilen Microsoft.Extensions.DependencyInjection.IServiceCollection.IServiceCollection öğesine MVC hizmetleri ekler.</para>
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupHelpers.ConfigureCors(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configured cors policies.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupHelpers.ConfigureIdentity(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Milvasoft.Helpers.FileOperations.Abstract.IJsonOperations)">
            <summary>
            Configures AspNetCore.Identity.Mongo and JWT.
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <param name="jsonOperations"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupHelpers.ConfigureDependencyInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures DI.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupHelpers.ConfigureDatabase(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Configures database connection.
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupHelpers.ConfigureVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures API versioning.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupHelpers.ConfigureSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures Swagger documentation.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupHelpers.CustomErrorResponse(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Prepares custom validation model for response.
            </summary>
            <param name="actionContext"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupHelpers.ConfigureJWT(Microsoft.Extensions.DependencyInjection.IServiceCollection,Milvasoft.Helpers.FileOperations.Abstract.IJsonOperations)">
            <summary>
            Configures JWT Token Authentication.
            </summary>
            <param name="services"></param>
            <param name="jSONFile"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupHelpers.ConfigureSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds swagger documentation to pipeline.
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.AppStartup.StartupHelpers.ConfigureLocalization(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            <para><b>EN: </b>Adds the required middleware to use the localization. Configures the options before add.</para>
            <para><b>TR: </b>Lokalizasyon için gereken middleware ekler. Eklemeden önce opsiyonları konfigüre eder.</para>
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Controllers.AccountController.SignUpAsync(Milvasoft.SampleAPI.DTOs.IdentityDTOs.SignUpDTO)">
            <summary>
            Sign up method for users.
            </summary>
            
            <returns></returns>
            <param name="signUpDTO"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Controllers.AccountController.SignInAsync(Milvasoft.SampleAPI.DTOs.IdentityDTOs.LoginDTO)">
            <summary>
            Sign in method for customers. This endpoint is accessible for only customers.
            </summary>
            
            <remarks>
            <para><b>EN:</b> </para>
            <para> Sign in method for customers. This endpoint is accessible for only customers. </para> 
            <br></br>
            <para><b>TR:</b></para>
            <para> Müşteriler için giriş yapma işlemi. Bu endpoint sadece müşteriler için erişilebilirdir. </para>
            
            </remarks>
            
            <returns></returns>
            <param name="loginDTO"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Controllers.AccountController.SignOutCustomerAsync">
            <summary>
            Sign out method for customers. This endpoint is accessible for only customers.
            </summary>
            
            <remarks>
            <para><b>EN:</b> </para>
            <para> Sign out method for customers. This endpoint is accessible for only customers. </para> 
            <br></br>
            <para><b>TR:</b></para>
            <para> Müşteriler için çıkış işlemi. Bu endpoint sadece müşteriler için erişilebilirdir. </para>
            
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Controllers.CategoriesController.GetEntitiesAsync">
            <summary>
            Gets all categories.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Data.Abstract.IGenericRepository`1.GetEntitiesAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Gets all entities from database.
            If <paramref name="include"/> is provided, returns with joined tables.
            </summary>
            <param name="include"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Data.Abstract.IGenericRepository`1.GetEntityAsync(System.Guid,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Gets single entity by <paramref name="id"/>.
            If <paramref name="include"/> is provided, returns with joined tables.
            </summary>
            <param name="id"></param>
            <param name="include"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Data.Abstract.IGenericRepository`1.AddAsync(`0)">
            <summary>
            Addd <paramref name="entity"/> to database.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Data.Abstract.IGenericRepository`1.UpdateAsync(`0)">
            <summary>
            Updates requested <paramref name="entity"/> in database.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Data.Abstract.IGenericRepository`1.DeleteAsync(`0)">
            <summary>
            Deletes requested <paramref name="entity"/> from database.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Milvasoft.SampleAPI.DTOs.IdentityDTOs.LoginDTO">
            <summary>
            Login and sign up processes are happens with this dto.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.IdentityDTOs.LoginDTO.UserName">
            <summary>
            UserName of user.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.IdentityDTOs.LoginDTO.Email">
            <summary>
            Email of user.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.IdentityDTOs.LoginDTO.Password">
            <summary>
            Password of user.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.IdentityDTOs.LoginDTO.Persistent">
            <summary>
            Remember me option.
            </summary>
        </member>
        <member name="T:Milvasoft.SampleAPI.DTOs.IdentityDTOs.SignUpDTO">
            <summary>
            Login and sign up processes are happens with this dto.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.IdentityDTOs.SignUpDTO.Name">
            <summary>
            Customer's name.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.IdentityDTOs.SignUpDTO.Surname">
            <summary>
            Customer's surname.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.IdentityDTOs.SignUpDTO.Token">
            <summary>
            Ops!yon Customer Global API token with unlimited time.
            </summary>
        </member>
        <member name="T:Milvasoft.SampleAPI.DTOs.IdentityDTOs.SignUpResultDTO">
            <summary>
            Sign up result.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.IdentityDTOs.SignUpResultDTO.Message">
            <summary>
            Response message.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.IdentityDTOs.SignUpResultDTO.Token">
            <summary>
            Local API token.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.IdentityDTOs.SignUpResultDTO.GlobalToken">
            <summary>
            Global API token.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.IdentityDTOs.SignUpResultDTO.LocalAPIFailure">
            <summary>
            Determines Global API error or Local API error.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.TodoDTO.Content">
            <summary>
            User defined task content.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.TodoDTO.ReminMeDate">
            <summary>
            Remind date of task.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.TodoDTO.DueDate">
            <summary>
            Due date of task.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.TodoDTO.CategoryId">
            <summary>
            Foreing key of category.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.DTOs.TodoDTO.Category">
            <summary>
            Navigation property of category.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Entity.Todo.Content">
            <summary>
            User defined task content.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Entity.Todo.ReminMeDate">
            <summary>
            Remind date of task.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Entity.Todo.DueDate">
            <summary>
            Due date of task.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Entity.Todo.IsFavorite">
            <summary>
            Fovarite check
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Entity.Todo.CategoryId">
            <summary>
            Foreing key of category.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Entity.Todo.Category">
            <summary>
            Navigation property of category.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Middlewares.ExceptionHandlerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Constructor of <c>ExceptionMiddleware</c> class.
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.Middlewares.ExceptionHandlerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            <para><b>EN: </b>Invokes the method or constructor reflected by this MethodInfo instance.</para>
            <para><b>TR: </b>Bu MethodInfo örneği tarafından yansıtılan yöntemi veya yapıcıyı çağırır.</para>
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Middlewares.MiddlewareExtensions.UseMilvaGeneralMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Extension method of <c>HeaderCheckMiddleware</c> class.
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:Milvasoft.SampleAPI.Middlewares.MilvaGeneralMiddleware">
            <summary>
            <para><b>EN: </b>Checks if the title is suitable for the conditions.</para>
            <para><b>TR: </b>Başlığın koşullara uygun olup olmadığını kontrol eder.</para>
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Middlewares.MilvaGeneralMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Constructor of <c>HeaderCheckMiddleware</c> class.
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.Middlewares.MilvaGeneralMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            <para><b>EN: </b>Invokes the method or constructor reflected by this MethodInfo instance.</para>
            <para><b>TR: </b>Bu MethodInfo örneği tarafından yansıtılan yöntemi veya yapıcıyı çağırır.</para>
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Seed.SeedData.ToGuid(System.Int32)">
            <summary>
            This method return int value to guid value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Milvasoft.SampleAPI.Services.Abstract.IAccountService">
            <summary>
            <para><b>EN:</b> The class in which user transactions are entered and exited</para>
            <para><b>TR:</b> Kullanıcı işlemlerinin giriş-çıkış işlemlerinin yapıldığı sınıf</para>
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.SignInAsync(Milvasoft.Helpers.Identity.Abstract.ILoginDTO)">
            <summary>
            Signs in for incoming user. Returns a token if login informations are valid or the user is not lockedout. Otherwise returns the error list.
            </summary>
            <param name="loginDTO"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.SignOutAsync">
            <summary>
            Signs out from database. Returns null if already signed out.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.DeleteUserAsync(System.Guid)">
            <summary>
            Delete user by <paramref name="userId"/>.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.ResetPasswordAsync(System.String)">
            <summary>
            Resetes current user's password.
            </summary>
            <param name="newPassword"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.ChangeCurrentUserPasswordAsync(System.String,System.String)">
            <summary>
            Change current user's password.
            </summary>
            <param name="oldPassword"></param>
            <param name="newPassword"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.ChangePasswordAsync(Milvasoft.SampleAPI.Entity.Identity.MilvaUser,System.String,System.String)">
            <summary>
            Changes <paramref name="user"/> password.
            </summary>
            <param name="user"></param>
            <param name="currentPassword"></param>
            <param name="newPassword"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.ChangeEmailAsync(Milvasoft.SampleAPI.Entity.Identity.MilvaUser,System.String,System.String)">
            <summary>
            Changes <paramref name="user"/> email.
            </summary>
            <param name="user"></param>
            <param name="newEmail"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.ChangePhoneNumberAsync(Milvasoft.SampleAPI.Entity.Identity.MilvaUser,System.String,System.String)">
            <summary>
            Changes <paramref name="user"/> phone number.
            </summary>
            <param name="user"></param>
            <param name="newPhoneNumber"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.ThrowErrorMessagesIfNotSuccess(Microsoft.AspNetCore.Identity.IdentityResult)">
            <summary>
            If <paramref name="identityResult"/> is not succeeded throwns <see cref="T:Milvasoft.Helpers.Exceptions.MilvaUserFriendlyException"/>.
            </summary>
            <param name="identityResult"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.ValidateUser(Milvasoft.Helpers.Identity.Abstract.ILoginDTO,Milvasoft.SampleAPI.Entity.Identity.MilvaUser)">
            <summary>
            Validating user to login.
            </summary>
            <param name="loginDTO"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.GenerateTokenWithRoleAsync(Milvasoft.SampleAPI.Entity.Identity.MilvaUser,System.DateTime)">
            <summary>
            Roll is added according to user type and token is produced.
            </summary>
            <param name="user"></param>
            <param name="tokenExpiredDate"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.GenerateToken(System.String,System.Collections.Generic.IList{System.String},System.DateTime)">
            <summary>
            If Authentication is successful, JWT tokens are generated.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.ValidateTokenGetExpiredTime(System.String)">
            <summary>
            Decode Process of Token returns the time inside by Decoding the Token
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IAccountService.GetPrincipalForAccessToken(System.String)">
            <summary>
            Returns Claims in token for token decode
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IBaseService`1.GetEntitiesAsync">
            <summary>
            Get all entities from database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IBaseService`1.GetEntityAsync(System.Guid)">
            <summary>
            Get one entity by id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IBaseService`1.AddEntityAsync(`0)">
            <summary>
            Adds single entity to database.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IBaseService`1.UpdateEntityAsync(`0)">
            <summary>
            Updates single entity in database.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IBaseService`1.DeleteEntityAsync(System.Guid)">
            <summary>
            Deletes single entity from database.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Abstract.IBaseService`1.MarkAsIsFavoriteAsync(System.Guid,System.Boolean)">
            <summary>
            Sended favorites as mark.
            </summary>
            <param name="id"></param>
            <param name="isFavorite"></param>
            <returns></returns>
        </member>
        <member name="T:Milvasoft.SampleAPI.Services.Concrete.AccountService">
            <summary>
            Provides sign-in,sign-up and sign-out process for user.
            </summary>
        </member>
        <member name="F:Milvasoft.SampleAPI.Services.Concrete.AccountService._loginProvider">
            <summary>
            The authentication scheme for the provider the token is associated with.
            </summary>
        </member>
        <member name="F:Milvasoft.SampleAPI.Services.Concrete.AccountService._tokenType">
            <summary>
            The name of token.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.#ctor(Microsoft.AspNetCore.Identity.UserManager{Milvasoft.SampleAPI.Entity.Identity.MilvaUser},Microsoft.AspNetCore.Identity.SignInManager{Milvasoft.SampleAPI.Entity.Identity.MilvaUser},Milvasoft.SampleAPI.Utils.TokenManagement,Milvasoft.Helpers.DataAccess.Abstract.IContextRepository{Milvasoft.SampleAPI.Data.TodoAppDbContext},Microsoft.Extensions.Localization.IStringLocalizer{Milvasoft.SampleAPI.SharedResource},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Performs constructor injection for repository interfaces used in this service.
            </summary>
            <param name="userManager"></param>
            <param name="signInManager"></param>
            <param name="tokenManagement"></param>
            <param name="contextRepository"></param>
            <param name="localizer"></param>
            <param name="httpContextAccessor"></param>
            <param name="useWhiteList"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.SignUpAsync(Milvasoft.SampleAPI.DTOs.IdentityDTOs.SignUpDTO)">
            <summary>
            user sign up process.
            If signup process is succesful,then sign in.
            </summary>
            <param name="userSignUpDTO"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.SignInAsync(Milvasoft.Helpers.Identity.Abstract.ILoginDTO)">
            <summary>
            Signs in for incoming user. Returns a token if login informations are valid or the user is not lockedout. Otherwise returns the error list.
            </summary>
            <param name="loginDTO"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.SignOutAsync">
            <summary>
            Signs out from database. Returns null if already signed out.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.DeleteUserAsync(System.Guid)">
            <summary>
            Delete user by <paramref name="userId"/>.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.ResetPasswordAsync(System.String)">
            <summary>
            Resetes current user's password.
            </summary>
            <param name="newPassword"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.ChangeCurrentUserPasswordAsync(System.String,System.String)">
            <summary>
            Change current user's password.
            </summary>
            <param name="oldPassword"></param>
            <param name="newPassword"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.ChangePasswordAsync(Milvasoft.SampleAPI.Entity.Identity.MilvaUser,System.String,System.String)">
            <summary>
            Changes <paramref name="user"/> password.
            </summary>
            <param name="user"></param>
            <param name="currentPassword"></param>
            <param name="newPassword"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.ChangeEmailAsync(Milvasoft.SampleAPI.Entity.Identity.MilvaUser,System.String,System.String)">
            <summary>
            Changes <paramref name="user"/> email.
            </summary>
            <param name="user"></param>
            <param name="newEmail"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.ChangePhoneNumberAsync(Milvasoft.SampleAPI.Entity.Identity.MilvaUser,System.String,System.String)">
            <summary>
            Changes <paramref name="user"/> phone number.
            </summary>
            <param name="user"></param>
            <param name="newPhoneNumber"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.ThrowErrorMessagesIfNotSuccess(Microsoft.AspNetCore.Identity.IdentityResult)">
            <summary>
            If <paramref name="identityResult"/> is not succeeded throwns <see cref="T:Milvasoft.Helpers.Exceptions.MilvaUserFriendlyException"/>.
            </summary>
            <param name="identityResult"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.ValidateUser(Milvasoft.Helpers.Identity.Abstract.ILoginDTO,Milvasoft.SampleAPI.Entity.Identity.MilvaUser)">
            <summary>
            Validating user to login.
            </summary>
            <param name="loginDTO"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.GenerateTokenWithRoleAsync(Milvasoft.SampleAPI.Entity.Identity.MilvaUser,System.DateTime)">
            <summary>
            Roll is added according to user type and token is produced.
            </summary>
            <param name="user"></param>
            <param name="tokenExpiredDate"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.GenerateToken(System.String,System.Collections.Generic.IList{System.String},System.DateTime)">
            <summary>
            If Authentication is successful, JWT tokens are generated.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.ValidateTokenGetExpiredTime(System.String)">
            <summary>
            Decode Process of Token returns the time inside by Decoding the Token
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.AccountService.GetPrincipalForAccessToken(System.String)">
            <summary>
            Returns Claims in token for token decode
            </summary>
        </member>
        <member name="T:Milvasoft.SampleAPI.Services.Concrete.CategoryService">
            <summary>
            Provides category task crud operations. 
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.CategoryService.#ctor(Milvasoft.SampleAPI.Data.Abstract.IGenericRepository{Milvasoft.SampleAPI.Entity.Category})">
            <summary>
            Constructor of category service.
            </summary>
            <param name="categoryRepository"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.CategoryService.GetEntitiesAsync">
            <summary>
            Get all categories from database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.CategoryService.GetEntityAsync(System.Guid)">
            <summary>
            Get one category by id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.CategoryService.AddEntityAsync(Milvasoft.SampleAPI.DTOs.CategoryDTO)">
            <summary>
            Addd <paramref name="categoryDTO"/> to database.
            </summary>
            <param name="categoryDTO"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.CategoryService.UpdateEntityAsync(Milvasoft.SampleAPI.DTOs.CategoryDTO)">
            <summary>
            Updates requested <paramref name="categoryDTO"/> in database.
            </summary>
            <param name="categoryDTO"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.CategoryService.DeleteEntityAsync(System.Guid)">
            <summary>
            Deletes requested category whoose id equals to <paramref name="id"/> from database.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Milvasoft.SampleAPI.Services.Concrete.TodoService">
            <summary>
            Provides todo task crud operations. 
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.TodoService.#ctor(Milvasoft.SampleAPI.Data.Abstract.IGenericRepository{Milvasoft.SampleAPI.Entity.Todo})">
            <summary>
            Constructor of todo service.
            </summary>
            <param name="todoRepository"></param>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.TodoService.GetEntitiesAsync">
            <summary>
            Get all todos from database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.TodoService.GetEntityAsync(System.Guid)">
            <summary>
            Get one todo by id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.TodoService.AddEntityAsync(Milvasoft.SampleAPI.DTOs.TodoDTO)">
            <summary>
            Addd <paramref name="todoDTO"/> to database.
            </summary>
            <param name="todoDTO"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.TodoService.UpdateEntityAsync(Milvasoft.SampleAPI.DTOs.TodoDTO)">
            <summary>
            Updates requested <paramref name="todoDTO"/> in database.
            </summary>
            <param name="todoDTO"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.TodoService.DeleteEntityAsync(System.Guid)">
            <summary>
            Deletes requested todo whoose id equals to <paramref name="id"/> from database.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Milvasoft.SampleAPI.Services.Concrete.TodoService.MarkAsIsFavoriteAsync(System.Guid,System.Boolean)">
            <summary>
            Sended favorites as mark.
            </summary>
            <param name="id"></param>
            <param name="isFavorite"></param>
            <returns></returns>
        </member>
        <member name="T:Milvasoft.SampleAPI.Utils.AllowedFileExtensions">
            <summary>
            <para><b>EN: </b> Allowed file extensions for media files. </para>
            <para><b>TR: </b> Medya dosyaları için izin verilen uzantılar.  </para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.AllowedFileExtensions.FileType">
            <summary>
            <para><b>EN: </b> File type of media file.  </para>
            <para><b>TR: </b> Medya dosyasının dosya tipi. </para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.AllowedFileExtensions.AllowedExtensions">
            <summary>
            <para><b>EN: </b> Allowed extensions for this media type.  </para>
            <para><b>TR: </b> Bu medya tipi için izin verilen uzantılar. </para>
            </summary>
        </member>
        <member name="T:Milvasoft.SampleAPI.Utils.Attributes.ActionFilters.OValidateIdParameterAttribute">
            <summary>
            Specifies that the class or method that this attribute is applied to requires the specified the valid id.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Utils.Attributes.ActionFilters.OValidateIdParameterAttribute.#ctor">
            <summary>
            Constructor of <see cref="T:Milvasoft.SampleAPI.Utils.Attributes.ActionFilters.OValidateIdParameterAttribute"/> for localization.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Utils.Attributes.ActionFilters.OValidateIdParameterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Performs when action executing.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Milvasoft.SampleAPI.Utils.Attributes.ActionFilters.OValidateStringParameterAttribute">
            <summary>
            Specifies that the class or method that this attribute is applied to requires the specified prevent string injection attacks and min/max length checks.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Utils.Attributes.ActionFilters.OValidateStringParameterAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor of <see cref="T:Milvasoft.SampleAPI.Utils.Attributes.ActionFilters.OValidateStringParameterAttribute"/> for localization.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Utils.Attributes.ActionFilters.OValidateStringParameterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Performs when action executing.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Milvasoft.SampleAPI.Utils.Attributes.ActionFilters.OValidationFilterAttribute">
            <summary>
             Provides the attribute validation exclude opportunity.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Utils.Attributes.ActionFilters.OValidationFilterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Performs when action executing.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Milvasoft.SampleAPI.Utils.Attributes.ValidationAttributes.OValidateDecimalAttribute">
            <summary>
            Determines minimum decimal value.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Utils.Attributes.ValidationAttributes.OValidateDecimalAttribute.#ctor">
            <summary>
            Constructor of atrribute.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Utils.Attributes.ValidationAttributes.OValidateDecimalAttribute.#ctor(System.Int32)">
            <summary>
            Constructor of atrribute.
            </summary>
            <param name="minValue"></param>
        </member>
        <member name="T:Milvasoft.SampleAPI.Utils.Attributes.ValidationAttributes.OValidateIdAttribute">
            <summary>
            Specifies that the class or property that this attribute is applied to requires the specified the valid id.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Utils.Attributes.ValidationAttributes.OValidateIdAttribute.#ctor">
            <summary>
            Constructor that accepts the maximum length of the string.
            </summary>
        </member>
        <member name="T:Milvasoft.SampleAPI.Utils.Attributes.ValidationAttributes.OValidateStringAttribute">
            <summary>
            Specifies that the class or property that this attribute is applied to requires the specified prevent string injection attacks and min/max length checks.
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Utils.Attributes.ValidationAttributes.OValidateStringAttribute.#ctor(System.Int32)">
            <summary>
            Constructor that accepts the maximum length of the string.
            </summary>
            <param name="maximumLength">The maximum length, inclusive.  It may not be negative.</param>
        </member>
        <member name="M:Milvasoft.SampleAPI.Utils.Attributes.ValidationAttributes.OValidateStringAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor that accepts the maximum length of the string.
            </summary>
            <param name="minimumLength">The minimum length, inclusive.  It may not be negative.</param>
            <param name="maximumLength">The maximum length, inclusive.  It may not be negative.</param>
        </member>
        <member name="T:Milvasoft.SampleAPI.Utils.GlobalConstants">
            <summary>
            Global constants.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.RootPath">
            <summary>
            <para><b>EN: </b>Rootpath of application. </para>
            <para><b>TR: </b>Uygulamanın kök yolu.</para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.Processes">
            <summary>m
            <para><b>EN: </b>Process list.</para>
            <para><b>TR: </b>İşlem listesi.</para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.AllowedFileExtensions">
            <summary>
            <para><b>EN: </b> Allowed file extensions for media files. </para>
            <para><b>TR: </b> Medya dosyaları için izin verilen uzantılar.  </para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.StringBlacklist">
            <summary>
            <para><b>EN: </b> Invalid strings for prevent hacking or someting ;)  </para>
            <para><b>TR: </b> Hacking veya başka bir şeyi önlemek için geçersiz string değerler ;) </para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.InstitutionId">
            <summary>
             <para><b>EN: </b> Id of Institution.  </para>
             <para><b>TR: </b> İşletmenin Id'si. </para>
             </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.ThumbnailSizes">
            <summary>
            <para><b>EN: </b> Thumbnail file size.  </para>
            <para><b>TR: </b> Thumbnail dosyalarının boyutu. </para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.BackupsFolderPath">
            <summary>
            <para><b>EN: </b>Path of "Media Library" folder in wwwroot folder.  </para>
            <para><b>TR: </b>Wwwroot klasöründeki "Media Library" klasörünün yolu.</para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.UserActivityLogsBackupsPath">
            <summary>
            <para><b>EN: </b>Path of "Media Library" folder in wwwroot folder.  </para>
            <para><b>TR: </b>Wwwroot klasöründeki "Media Library" klasörünün yolu.</para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.MediaLibraryPath">
            <summary>
            <para><b>EN: </b>Path of "Media Library" folder in wwwroot folder.  </para>
            <para><b>TR: </b>Wwwroot klasöründeki "Media Library" klasörünün yolu.</para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.ImageLibraryPath">
            <summary>
            <para><b>EN: </b>Path of "Image Library" folder in wwwroot folder.   </para>
            <para><b>TR: </b>Wwwroot klasöründeki "Image Library" klasörünün yolu.</para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.ARModelLibraryPath">
            <summary>
            <para><b>EN: </b>Path of "ARModel Library" folder in wwwroot folder. </para>
            <para><b>TR: </b>Wwwroot klasöründeki "ARModel Library" klasörünün yolu.</para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.VideoLibraryPath">
            <summary>
            <para><b>EN: </b>Path of "Video Library" folder in wwwroot folder.</para>
            <para><b>TR: </b>Wwwroot klasöründeki "Video Library" klasörünün yolu.</para>
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.DocumentLibraryPath">
            <summary>
            <para><b>EN: </b>Path of "Video Library" folder in wwwroot folder.</para>
            <para><b>TR: </b>Wwwroot klasöründeki "Video Library" klasörünün yolu.</para>
            </summary>
        </member>
        <member name="F:Milvasoft.SampleAPI.Utils.GlobalConstants.Zero">
            <summary>
            Zero
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.MailContent">
            <summary>
            Mail content of injection mails.
            </summary>
        </member>
        <member name="P:Milvasoft.SampleAPI.Utils.GlobalConstants.DefaultNumberOfPeople">
            <summary>
            
            </summary>
        </member>
        <member name="T:Milvasoft.SampleAPI.Utils.Swagger.DocumentFilter">
            <summary>
            <para><b>EN: </b>Swagger document creation utility class</para>
            <para><b>TR: </b>Swagger dokumanı oluşturmaya yardımcı sınıf</para>
            </summary>
        </member>
        <member name="M:Milvasoft.SampleAPI.Utils.Swagger.DocumentFilter.Apply(Microsoft.OpenApi.Models.OpenApiDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            <para><b>EN: </b> Applies filter on swagger document.</para>
            <para><b>TR: </b> Swagger dökümantasyonuna istenilen filtrelemeyi uygular. </para>
            </summary>
            <param name="swaggerDoc"></param>
            <param name="context"></param>
        </member>
        <member name="T:Milvasoft.SampleAPI.Utils.Swagger.HeaderFilter">
            <summary>
            Operation filter to add the requirement of the custom header
            </summary>
        </member>
    </members>
</doc>
